

#manifest {
	cc_includes {
		"@windows.h";
	}
	cc_flags {
		"-DWIN32_LEAN_AND_MEAN";
	}
}

#type DWORD uint;
#type DWORDLONG usize;
#type DWORD_PTR ULONG_PTR
#type DWORD32 uint;
#type DWORD64 usize;
#type FLOAT float;
#type ATOM DWORD;
#type BOOL int;
#type BYTE uchar;
#type BOOLEAN BYTE;
#type CCHAR char;
#type CHAR char;
#type COLORREF DWORD;
#type HACCEL HANDLE;
#type HALF_PTR uint;
#type HANDLE PVOID;
#type HBITMAP HANDLE;
#type HBRUSH HANDLE;
#type HCOLORSPACE HANDLE;
#type HCONV HANDLE;
#type HCONVLIST HANDLE;
#type HCURSOR HICON;
#type HDC HANDLE;
#type HDDEDATA HANDLE;
#type HDESK HANDLE;
#type HDROP HANDLE;
#type HDWP HANDLE;
#type HENHMETAFILE HANDLE;
#type HFILE int;
#type HFONT HANDLE;
#type HGDIOBJ HANDLE;
#type HGLOBAL HANDLE;
#type HHOOK HANDLE;
#type HICON HANDLE;
#type HINSTANCE HANDLE;
#type HKEY HANDLE;
#type HKL HANDLE;
#type HLOCAL HANDLE;
#type HMENU HANDLE;
#type HMETAFILE HANDLE;
#type HMODULE HINSTANCE;
#type HMONITOR HANDLE;
#type HPALETTE HANDLE;
#type HPEN HANDLE;
#type HRESULT LONG;
#type HRGN HANDLE;
#type HRSRC HANDLE;
#type HSZ HANDLE;
#type HWINSTA HANDLE;
#type HWND HANDLE;
#type INT int;
#type INT_PTR size;
#type INT8 char;
#type INT16 short;
#type INT32 int;
#type INT64 size;
#type LANGID WORD;
#type LCID DWORD;
#type LCTYPE DWORD;
#type LGRPID DWORD;
#type LONG long;
#type LONGLONG size;
#type LONG_PTR size;
#type LONG32 int;
#type LONG64 size;
#type LPARAM LONG_PTR;
#type LPBOOL *BOOL;
#type LPBYTE *BYTE;
#type LPCOLORREF *DWORD;
#type LPCSTR *const char;
#type LPCVOID *const void;
#type LPCWSTR *const WCHAR;
#type LPDWORD *DWORD;
#type LPHANDLE *HANDLE;
#type LPINT *int;
#type LPLONG *long;
#type LPSTR *CHAR;
#type LPVOID *void;
#type LPWORD *WORD;
#type LPWSTR *WCHAR;
#type LRESULT LONG_PTR;
#type PBOOL *BOOL;
#type PBOOLEAN *BOOLEAN;
#type PBYTE *BYTE;
#type PCHAR *CHAR;
#type PCSTR *const CHAR;
#type PCWSTR *const WCHAR;
#type PDWORD *DWORD;
#type PDWORDLONG *DWORDLONG;
#type PDWORD_PTR *DWORD_PTR;
#type PDWORD32 *DWORD32;
#type PDWORD64 *DWORD64;
#type PFLOAT *FLOAT;
#type PHALF_PTR *HALF_PTR;
#type PHANDLE *HANDLE;
#type PHKEY *HKEY;
#type PINT *int;
#type PINT_PTR *INT_PTR;
#type PINT8 *INT8;
#type PINT16 *INT16;
#type PINT32 *INT32;
#type PINT64 *INT64;
#type PLCID PDWORD;
#type PLONG *LONG;
#type PLONGLONG *LONGLONG;
#type PLONG_PTR *LONG_PTR;
#type PLONG32 *LONG32;
#type PLONG64 *LONG64;
#type PSHORT *SHORT;
#type PSIZE_T *SIZE_T;
#type PSSIZE_T *SSIZE_T;
#type PSTR *CHAR;
#type PUCHAR *UCHAR;
#type PUHALF_PTR *UHALF_PTR;
#type PUINT *UINT;
#type PUINT_PTR *UINT_PTR;
#type PUINT8 *UINT8;
#type PUINT16 *UINT16;
#type PUINT32 *UINT32;
#type PUINT64 *UINT64;
#type PULONG *ULONG;
#type PULONGLONG *ULONGLONG;
#type PULONG_PTR *ULONG_PTR;
#type PULONG32 *ULONG32;
#type PULONG64 *ULONG64;
#type PUSHORT *USHORT;
#type PVOID *void;
#type PWCHAR *WCHAR;
#type PWORD *WORD;
#type PWSTR *WCHAR;
#type QWORD usize;
#type SC_HANDLE HANDLE;
#type SC_LOCK LPVOID;
#type SERVICE_STATUS_HANDLE HANDLE;
#type SHORT short;
#type SIZE_T ULONG_PTR;
#type SSIZE_T LONG_PTR;
#type UCHAR uchar;
#type UHALF_PTR uint;
#type UINT uint;
#type UINT_PTR usize;
#type UINT8 uchar;
#type UINT16 ushort;
#type UINT32 uint;
#type UINT64 usize;
#type ULONG ulong;
#type ULONGLONG usize;
#type ULONG_PTR usize;
#type ULONG32 uint;
#type ULONG64 usize;
#type UNICODE_STRING struct _UNICODE_STRING;
#type PUNICODE_STRING *UNICODE_STRING;
#type PCUNICODE_STRING *const UNICODE_STRING;
#type USHORT ushort;
#type USN LONGLONG;
#type VOID void;
#type WCHAR wchar;
#type WORD ushort;
#type WPARAM UINT_PTR;

#external struct _UNICODE_STRING {
	Length			USHORT;
	MaximumLength	USHORT;
	Buffer			PWSTR;
}



